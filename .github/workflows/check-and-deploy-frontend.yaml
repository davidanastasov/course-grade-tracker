name: Check & Deploy Frontend

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - dev
    paths:
      - "frontend/**"

jobs:
  check-frontend:
    runs-on: ubuntu-latest
    name: Check Frontend
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Node modules caching 
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm install

      - name: Check code formatting
        run: npm run format:check

      - name: Check code linting
        run: npm run lint:check

      - name: Build app
        run: npm run build

  deploy-frontend:
    needs: check-frontend
    runs-on: ubuntu-latest
    name: Deploy Frontend
    strategy:
      matrix:
        environment: [staging, production]
    if: >
      (matrix.environment == 'staging' && github.ref == 'refs/heads/dev') ||
      (matrix.environment == 'production' && github.ref == 'refs/heads/master')
    environment: ${{ matrix.environment }}
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build --build-arg VITE_API_BASE_URL=${{ vars.API_BASE_URL }} \
            -t ${{ secrets.DOCKERHUB_ORG }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ vars.DOCKER_IMAGE_TAG }} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_ORG }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ vars.DOCKER_IMAGE_TAG }}
